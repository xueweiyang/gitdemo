apply plugin: 'com.android.library'

ext {
    APMSDK_DEBUG = false;
    APMSDK_VERSION = "\"2.0.1\"";
    APMSDK_BUILD = "\"1006\"";
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'argus-apm-okhttp.pro'
    }

    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }

    lintOptions {
        abortOnError false
    }
}

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
    generateDebugBuildConfig.enabled = false
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    provided "org.aspectj:aspectjrt:1.8.9"
    provided "org.aspectj:aspectjtools:1.8.9"

    provided 'com.squareup.okhttp3:okhttp:3.7.0'
    provided 'com.squareup.okio:okio:1.12.0'

    if (ArgusAPM_Release) {
        provided project(':argus-apm-main')
    } else {
        releaseProvided project(path: ':argus-apm-main', configuration: 'release')
        debugProvided project(path: ':argus-apm-main', configuration: 'debug')
    }
}

//-----------------------------------以下为通过ajc编译AspectJ相关的代码-----------------------------------------------
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.9'
    }
}

repositories {
    mavenCentral()
}

final def log = project.logger
final def variants = project.android.libraryVariants

variants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.quiet "ajc args:---" + variant.buildType.name + "----" + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}


apply plugin: 'maven'


uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_RELEASE_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.project {
                version '2.0.1.1005'
                artifactId 'argus-apm-okhttp'
                groupId GROUP_ID
                packaging TYPE
                description DESCRIPTION
            }
        }
    }
}
